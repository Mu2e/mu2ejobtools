#!/usr/bin/perl -w
#
# A.Gaponenko, 2023
#

use strict;
use warnings;
use Getopt::Long;
use File::Basename;

use lib dirname($0) . '/../perllib/';
use Mu2eJobPars;

use Data::Dumper; # for debugging

#================================================================
sub usage() {
    my $self = basename($0);
    return <<EOF
Usage:
    $self [-h|--help] <query> cnf.tar

This script extracts and prints out information from the job parameter
file cnf.tar   The possible queries are

    --jobname  The name of the job set.

    --njobs  The number of jobs in the set, zero means unlimited.

    --datasets  List of all datasets used by the job set.

    --codesize  The size of the compressed code tarball, in bytes.
        This will print 0 if the job par file does not contain code.

    --extract-code  This prints nothing, but expands the embedded code
        tarball in the current directory.  This option does nothing if
        there is no embedded code.

    --setup  Prints the name of the setup file.  A recommended way to
        setup Offline environment for the jobs is the following
        sequence of two commands (note the backticks).  This will do
        the right thing whether the code is embedded or lives in
        CVMFS.

        \$ mu2ejobquery --extract-code cnf.tar
        \$ source \`mu2ejobquery --setup cnf.tar\`

EOF
}

#================================================================
my %opt;

GetOptions(\%opt,
           'jobname',
           'njobs',
           'datasets',
           'codesize',
           'extract-code',
           'setup',
           'help',
    )
    or die "\nError processing command line options.\n";

if($opt{'help'}) {
    print usage();
    exit 0;
}

die "Error: too many arguments: @ARGV\n"
       if(scalar(@ARGV) > 1);

die "Error: the cnf.tar agument is required.\n"
       if(scalar(@ARGV) < 1);

my $nopt = scalar(keys %opt);
die "What is the query?\n" unless $nopt;
die "Error: multiple queries\n" unless $nopt == 1;

my $pfname = $ARGV[0];

my $jp = Mu2eJobPars->new($pfname);

#================================================================
if( $opt{'jobname'} ) {
    print $jp->jobname(), "\n";
}

#================================================================
if( $opt{'njobs'} ) {
    my $nj = $jp->njobs();
    print "$nj\n";
}

#================================================================
if( $opt{'datasets'} ) {
    my @dss = $jp->input_datasets();
    print "@dss\n";
}

#================================================================
if( $opt{'codesize'} ) {
    print $jp->codesize(), "\n";
}

#================================================================
if( $opt{'extract-code'} ) {
    $jp->extract_code();
}

#================================================================
if( $opt{'setup'} ) {
    print $jp->setup(), "\n";
}

#================================================================
exit(0);
